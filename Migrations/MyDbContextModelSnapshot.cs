// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("api.Data.Category", b =>
                {
                    b.Property<int>("cateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cateName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("cateId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("api.Data.DonHang", b =>
                {
                    b.Property<Guid>("MaDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DiaChiGiao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("NgayDat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2023, 7, 13, 9, 34, 3, 933, DateTimeKind.Utc).AddTicks(1690));

                    b.Property<DateTime?>("NgayGia")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NguoiNhan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TinhTrang")
                        .HasColumnType("int");

                    b.HasKey("MaDonHang");

                    b.ToTable("DonHang", (string)null);
                });

            modelBuilder.Entity("api.Data.DonHangChiTiet", b =>
                {
                    b.Property<Guid>("MaDonHang")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<double>("DonGia")
                        .HasColumnType("double");

                    b.Property<double>("GiamGia")
                        .HasColumnType("double");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaDonHang", "Id");

                    b.HasIndex("Id");

                    b.ToTable("ChiTietDonHang", (string)null);
                });

            modelBuilder.Entity("api.Data.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double>("Discount")
                        .HasColumnType("double");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("cateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cateId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("api.Data.DonHangChiTiet", b =>
                {
                    b.HasOne("api.Data.Product", "Product")
                        .WithMany("DonHangChiTiet")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DonHangCT_SanPham");

                    b.HasOne("api.Data.DonHang", "DonHang")
                        .WithMany("DonHangChiTiet")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DonHangCT_DonHang");

                    b.Navigation("DonHang");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("api.Data.Product", b =>
                {
                    b.HasOne("api.Data.Category", "Category")
                        .WithMany()
                        .HasForeignKey("cateId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("api.Data.DonHang", b =>
                {
                    b.Navigation("DonHangChiTiet");
                });

            modelBuilder.Entity("api.Data.Product", b =>
                {
                    b.Navigation("DonHangChiTiet");
                });
#pragma warning restore 612, 618
        }
    }
}
